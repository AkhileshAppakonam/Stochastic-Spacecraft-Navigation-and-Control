function PlotOrbit(AXES,Extent,Asteroid,Projection,varargin)

% Inputs
% AXES = 1/0                      Plot the asteroid Reference Frame
% Extent                          Axes Extent
% Asteroid                        Name of the asteroid
% varargin                        Orbit and Name in the legende (max 4 orbits)


%% UPLOAD ASTEROID
if Asteroid== "Pan"
    
    R_Asteroid = 30;
    %[km]Mean equatorial radius
    
    load('PanData.mat')
    load('PanIndex.mat')
    load('PanIndex_plus1.mat')
    image = imread('Pan.bmp');             % Load RGB image
    
    Scale = 1/18;

elseif Asteroid== "Bennu"
    
    R_Asteroid = 0.5;
    %[km]Mean equatorial radius
    
    load('BennuData.mat')
    load('BennuIndex.mat')
    load('BennuIndex_plus1.mat')
    
    image = imread('Bennu.bmp');             % Load RGB image
    
    Scale = 4;
    
elseif Asteroid== "Itokawa"

    R_Asteroid = 0.3;
    %[km]Mean equatorial radius
    
    load('ItokawaData.mat')
    load('ItokawaIndex.mat')
    load('ItokawaIndex_plus1.mat')
    image = imread('Itokawa.bmp');             % Load RGB image
    
    A = I;
    
    Scale = 5;
    
    Extent = Extent + 1;
    
end


% A is the xyz matrix for Pan data
% B is the matrix of Pan's indices indexed from 0
% C is the matrix of Pan's indices indexed from 1
x = A(1:length(A), 1);
y = A(1:length(A), 2);
z = A(1:length(A), 3);


% Creates a surface and applies texture (increase matrix
% dimesnsions for N & M to increase resolution of graph)
xmin = min(x);
xmax = max(x);
ymin = min(y);
ymax = max(y);

N = 2000;  % Number of y values in uniform grid
M = 2000;  % Number of x values in uniform grid
xu = linspace(xmin, xmax, M);         % Uniform x-coordinates
yu = linspace(ymin, ymax, N);         % Uniform y-coordinates
[X, Y] = meshgrid(xu, yu);            % Create meshes for xu and yu
F = TriScatteredInterp(x(:), y(:), z(:));  % Create interpolant
Z = F(X, Y);                          % Evaluate interpolant (N-by-M matrix)

ScreenSize = get(0,'ScreenSize');
%[]Determines the location and dimensions of the current monitor.

Window = figure( ...
    'Color','w', ...
    'Name','ORBIT IN THREE DIMENSTIONS', ...
    'NumberTitle','Off', ...
    'OuterPosition',ScreenSize);
%[]Opens a new window and adjusts its properties.

Axes = axes( ...
    'FontName','Arial', ...
    'FontSize',18, ...
    'Parent',Window, ...
    'PlotBoxAspectRatio',[1,1,1], ...
    'NextPlot','Add', ...
    'View',[135,25], ...
    'XGrid','On', ...
    'YGrid','On', ...
    'ZGrid','On', ...
    'XLim',Extent * [-1,1], ...
    'YLim',Extent * [-1,1], ...
    'ZLim',Extent * [-1,1], ...
    'XTick',Extent * (-1:0.2:1), ...
    'YTick',Extent * (-1:0.2:1), ...
    'ZTick',Extent * (-1:0.2:1));
%[]Adds an axes to the specified window and adjusts its properties.

h = surf(X*Scale, Y*Scale, Z*Scale);
set(h, 'Cdata', flip(image, 1), ...  % Plot surface
    'FaceColor', 'texturemap', ...
    'EdgeColor', 'none',...
    'Parent',Axes);


%% PLOT AXES
if AXES==1
quiver3(0,0,0, Extent,0,0, ...
    'Color',[0.47,0.67,0.19], ...
    'Linestyle','-', ...
    'LineWidth',3, ...
    'Marker','None', ...
    'Parent',Axes);
%[]Adds a plot to the specified axes and adjusts its properties.

quiver3(0,0,0, 0,Extent,0, ...
    'Color',[0.47,0.67,0.19], ...
    'Linestyle','-', ...
    'LineWidth',3, ...
    'Marker','None', ...
    'Parent',Axes);
%[]Adds a plot to the specified axes and adjusts its properties.

quiver3(0,0,0, 0,0,Extent, ...
    'Color',[0.47,0.67,0.19], ...
    'Linestyle','-', ...
    'LineWidth',3, ...
    'Marker','None', ...
    'Parent',Axes);
%[]Adds a plot to the specified axes and adjusts its properties.

text( ...
    'BackGroundColor','w', ...
    'Color',[0.47,0.67,0.19], ...
    'FontName','Arial', ...
    'FontSize',12, ...
    'FontWeight','Bold', ...
    'HorizontalAlignment','Center', ...
    'LineStyle','None', ...
    'Margin',7, ...
    'Parent',Axes, ...
    'Position',[Extent + Extent / 10,0,0], ...
    'String','X', ...
    'VerticalAlignment','Middle');
%[]Adds a text box to the specified axes and adjusts its properties.

text( ...
    'BackGroundColor','w', ...
    'Color',[0.47,0.67,0.19], ...
    'FontName','Arial', ...
    'FontSize',12, ...
    'FontWeight','Bold', ...
    'HorizontalAlignment','Center', ...
    'LineStyle','None', ...
    'Margin',7, ...
    'Parent',Axes, ...
    'Position',[0,Extent + Extent / 10,0], ...
    'String','Y', ...
    'VerticalAlignment','Middle');
%[]Adds a text box to the specified axes and adjusts its properties.

text( ...
    'BackGroundColor','w', ...
    'Color',[0.47,0.67,0.19], ...
    'FontName','Arial', ...
    'FontSize',12, ...
    'FontWeight','Bold', ...
    'HorizontalAlignment','Center', ...
    'LineStyle','None', ...
    'Margin',7, ...
    'Parent',Axes, ...
    'Position',[0,0,Extent + Extent / 10], ...
    'String','Z', ...
    'VerticalAlignment','Middle');
%[]Adds a text box to the specified axes and adjusts its properties.
end


%% PLOT ORBITS
if Projection==0
if length(varargin)==2 % 1 Orbit
R1 = varargin{1};
R1 = R1 / R_Asteroid;
%[Re]Normalizes the state matrix to Pan radii.

t1 = plot3(R1(1,:),R1(2,:),R1(3,:), ...
    'Color',[0.93,0.69,0.13], ...
    'LineStyle','- -', ...
    'Linewidth',2, ...
    'Parent',Axes);
%[]Adds a plot to the specified axes and adjusts its properties.
legend(t1,varargin{2},'interpreter','latex','Fontsize',18,'position',[0.68,0.73,0.11,0.04])



elseif length(varargin)==4 %2 Orbits
R1 = varargin{1}; R2 = varargin{3};
R1 = R1 / R_Asteroid; R2 = R2 / R_Asteroid;

t1 = plot3(R1(1,:),R1(2,:),R1(3,:), ...
    'Color',[0.93,0.69,0.13], ...
    'LineStyle','- -', ...
    'Linewidth',2, ...
    'Parent',Axes);

t2 = plot3(R2(1,:),R2(2,:),R2(3,:), ...
    'Color',[0.00,0.45,0.74], ...
    'LineStyle','-', ...
    'Linewidth',1, ...
    'Parent',Axes);

legend([t1 t2],varargin{2},varargin{4},'interpreter','latex','Fontsize',18,'position',[0.68,0.73,0.11,0.04])


elseif length(varargin)==6 %3 Orbits
R1 = varargin{1}; R2 = varargin{3}; R3 = varargin{5};
R1 = R1 / R_Asteroid; R2 = R2 / R_Asteroid;  R3 = R3 / R_Asteroid;

t1 = plot3(R1(1,:),R1(2,:),R1(3,:), ...
    'Color',[0.93,0.69,0.13], ...
    'LineStyle','- -', ...
    'Linewidth',2, ...
    'Parent',Axes);

t2 = plot3(R2(1,:),R2(2,:),R2(3,:), ...
    'Color',[0.00,0.45,0.74], ...
    'LineStyle','-', ...
    'Linewidth',1, ...
    'Parent',Axes);

t3 = plot3(R3(1,:),R3(2,:),R3(3,:), ...
    'Color',[0.64,0.08,0.18], ...
    'LineStyle','-', ...
    'Linewidth',1, ...
    'Parent',Axes);
    
legend([t1 t2 t3],varargin{2},varargin{4},varargin{6},...
    'interpreter','latex','Fontsize',18,'position',[0.68,0.73,0.11,0.04])

elseif length(varargin)==8  %4 Orbits
R1 = varargin{1}; R2 = varargin{3}; R3 = varargin{5};  R4 = varargin{7};
R1 = R1 / R_Asteroid; R2 = R2 / R_Asteroid;  R3 = R3 / R_Asteroid;  R4 = R4 / R_Asteroid;

t1 = plot3(R1(1,:),R1(2,:),R1(3,:), ...
    'Color',[0.93,0.69,0.13], ...
    'LineStyle','- -', ...
    'Linewidth',2, ...
    'Parent',Axes);

t2 = plot3(R2(1,:),R2(2,:),R2(3,:), ...
    'Color',[0.00,0.45,0.74], ...
    'LineStyle','-', ...
    'Linewidth',1, ...
    'Parent',Axes);

t3 = plot3(R3(1,:),R3(2,:),R3(3,:), ...
    'Color',[0.64,0.08,0.18], ...
    'LineStyle','-', ...
    'Linewidth',1, ...
    'Parent',Axes);

t4 = plot3(R4(1,:),R4(2,:),R4(3,:), ...
    'Color','k', ...
    'LineStyle','--', ...
    'Linewidth',1, ...
    'Parent',Axes);

legend([t1 t2 t3 t4],varargin{2},varargin{4},varargin{6},varargin{8},...
    'interpreter','latex','Fontsize',18,'position',[0.68,0.73,0.11,0.04])
end

elseif Projection==1
R1 = varargin{1}; R2 = varargin{3};
R1 = R1 / R_Asteroid; R2 = R2 / R_Asteroid;

%check point
t1 = plot3(R1(1,:),R1(2,:),R1(3,:), ...
    'Color',[0.00,0.45,0.74], ...
    'LineStyle','-', ...
    'Linewidth',2, ...
    'Parent',Axes);

summation = sum(sum(R2./R2));
if summation== size(R2,2)*size(R2,1)
 t2 = plot3(R2(1,:),R2(2,:),R2(3,:), ...
    'Color','k', ...
    'Marker','*', ...
    'MarkerSize',8, ...
    'Parent',Axes);
else
t2 = plot3(R2(1,:),R2(2,:),R2(3,:), ...
    'Color','k', ...
    'LineStyle','--', ...
    'Linewidth',1, ...
    'Parent',Axes);
end
plot3(R1(1,:)*0-Extent,R1(2,:),R1(3,:),'-','Color',[0.00,0.45,0.74])
plot3(R1(1,:),R1(2,:)*0-Extent,R1(3,:),'-','Color',[0.00,0.45,0.74])
plot3(R1(1,:),R1(2,:),R1(3,:)*0-Extent,'-','Color',[0.00,0.45,0.74])
plot3(R2(1,:)*0-Extent,R2(2,:),R2(3,:),'--','Color','k')
plot3(R2(1,:),R2(2,:)*0-Extent,R2(3,:),'--','Color','k')
plot3(R2(1,:),R2(2,:),R2(3,:)*0-Extent,'--','Color','k')
%Projections

legend([t1 t2],varargin{2},varargin{4},'interpreter','latex','Fontsize',18,'position',[0.68,0.73,0.11,0.04])



end
%% PLOT SETTINGS

xlim([-Extent Extent])
ylim([-Extent Extent])
zlim([-Extent Extent])
%[]Change Axis limits for a better visualization

xlabel('$\frac{x}{R_{Asteroid}}$ [ - ]','interpreter','latex','Fontsize',24);
ylabel('$\frac{y}{R_{Asteroid}}$ [ - ]','interpreter','latex','Fontsize',24);
zlabel('$\frac{z}{R_{Asteroid}}$ [ - ]','interpreter','latex','Fontsize',24);
%Add axis label

set(gca, 'Projection','perspective')
%Add perspective

end