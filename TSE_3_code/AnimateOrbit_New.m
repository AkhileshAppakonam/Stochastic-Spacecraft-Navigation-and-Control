%===================================================================================================
%[]FUNCTION NAME: AnimateOrbit.m
%[]AUTHOR: Julio César Benavides, revised by Matthew Wittal
%[]CREATED: 09/20/2013
%[]REVISED: 07/23/2020
%===================================================================================================
%[]FUNCTION DESCRIPTION:
%This function animates a satellite orbit with respect to the given Asteroid in three (3) dimensions.
%===================================================================================================
%[]INPUT VARIABLES:
%(t)|Simulation time:
%---------------------------------------------------------------------------------------------------
%(R)|Satelllite position vectors with respect to the Earth in Earth-Centered Inertial coordinates.
%---------------------------------------------------------------------------------------------------
%(UTC)|Coordinated universal time at mission commencement.
%---------------------------------------------------------------------------------------------------
%(Extent)|Axis extent.
%---------------------------------------------------------------------------------------------------
%(dt)|Time step.
%===================================================================================================
%[]OUTPUT VARIABLES:
%None.
%===================================================================================================
%[]VARIABLE FORMAT:
%(t)|Column Vector {m x 1} or Row Vector {1 x n}.
%---------------------------------------------------------------------------------------------------
%(R)|Matrix {3 x n}.
%---------------------------------------------------------------------------------------------------
%(UTC)|Row Vector {1 x 6}.
%---------------------------------------------------------------------------------------------------
%(Extent)|Scalar {1 x 1}.
%---------------------------------------------------------------------------------------------------
%(dt)|Scalar {1 x 1}.
%===================================================================================================
%[]USER-DEFINED FUNCTIONS:
%None.
%===================================================================================================
%[]COMMENTS:
%None.
%===================================================================================================
function AnimateOrbit_New(t,R,Extent,dt)
        
    
    if Asteroid == "Pan"
        
        Wp = 2 * pi / 49684.3812 * [0; 0; 1];
        %[rad/s]Angular velocity of Pan in P.C.E.F. coordinates.
        
        Implot = imread('Pan.bmp');
        %[]Loads the groundtrack image data.
        
        GroundTrack = image(Implot);
        %[]Adds a plot to the current axes.
        
    elseif Asteroid == "Bennu"
        
        Wp = 2 * pi / (4.297*60*60) * [0; 0; 1];
        %[rad/s]Angular velocity of Bennu in P.C.E.F. coordinates.
        
        Implot = imread('Bennu.bmp');
        %[]Loads the groundtrack image data.
        
        GroundTrack = image(Implot);
        %[]Adds a plot to the current axes.
        
    elseif Asteroid == "Itokawa"
        
        Wp  = 2 * pi / (12.132*60*60) * [0; 0; 1];
        %[rad/s]Angular velocity of Itokawa in P.C.E.F. coordinates.
        
        Implot = imread('Itokawa.bmp');
        %[]Loads the groundtrack image data.
        
        GroundTrack = image(Implot);
        %[]Adds a plot to the current axes.
        
    end

    PRA = wrapTo2Pi(norm(Wp) * t);
    %[rad]Earth rotation angle at mission commencement.
    
    Re = 6378.136;
    %[km]Mean equatorial radius of the Earth.
    
    R = R / Re;
    %[Earth radii]Normalizes the state matrix.
    
    [x,y,z] = ellipsoid(0,0,0,6378.136 / Re,6378.136 / Re,6356.751 / Re,50);
    %[Earth radii]Determines the coordinates of the Earth.
    
    Limits = Extent * [-1, 1];
    %[]Axes limits.
    
    ScreenSize = get(0,'ScreenSize');
    %[]Determines the location and dimensions of the current monitor.
    
    Window = figure( ...
        'Color','k', ...
        'Name','SATELLITE ORBIT', ...
        'NumberTitle','Off', ...
        'OuterPosition',ScreenSize);
    %[]Opens a new window and adjusts its properties.
    
    Axes = axes( ...
        'Color','k', ...
        'Parent',Window, ...
        'PlotBoxAspectRatio',[1,1,1], ...
        'NextPlot','Add', ...
        'View',[135,25], ...
        'XLim',Limits, ...
        'YLim',Limits, ...
        'ZLim',Limits);
    %[]Adds an axes to the specified window and adjusts its properties.
    
    counter = 0;
    %[]Time counter.
    
    while counter < max(t)
        
        index = find(t <= counter,1,'Last');
        %[]Time index that is closest to the current time counter.
        
        cla(Axes);
        %[]Clears all plots from the specified axes.
        
        Surface = surface(x,y,-z, ...
            'CData',Implot, ...
            'EdgeColor','None', ...
            'FaceColor','TextureMap', ...
            'Parent',Axes);
        %[]Adds a plot to the specified axes and adjusts its properties.
        
        rotate(Surface,[0,0,1],PRA(index),[0,0,0]);
        %[]Rotates the Earth about the K-axis by the current Earth rotation angle.
                
        plot3([0,Extent],[0,0],[0,0], ...
            'Color','r', ...
            'LineStyle','-', ...
            'LineWidth',3, ...
            'Marker','None', ...
            'Parent',Axes);
        %[]Adds a plot to the specified window and adjusts its properties.
        
        plot3(Extent,0,0, ...
            'Color','r', ...
            'LineStyle','None', ...
            'Marker','.', ...
            'MarkerSize',25, ...
            'Parent',Axes);
        %[]Adds a plot to the specified window and adjusts its properties.
        
        plot3([0,0],[0,Extent],[0,0], ...
            'Color','g', ...
            'LineStyle','-', ...
            'LineWidth',3, ...
            'Marker','None', ...
            'Parent',Axes);
        %[]Adds a plot to the specified window and adjusts its properties.
        
        plot3(0,Extent,0, ...
            'Color','g', ...
            'LineStyle','None', ...
            'Marker','.', ...
            'MarkerSize',25, ...
            'Parent',Axes);
        %[]Adds a plot to the specified window and adjusts its properties.
        
        plot3([0,0],[0,0],[0,Extent], ...
            'Color','b', ...
            'LineStyle','-', ...
            'LineWidth',3, ...
            'Marker','None', ...
            'Parent',Axes);
        %[]Adds a plot to the specified window and adjusts its properties.
        
        plot3(0,0,Extent, ...
            'Color','b', ...
            'LineStyle','None', ...
            'Marker','.', ...
            'MarkerSize',25, ...
            'Parent',Axes);
        %[]Adds a plot to the specified window and adjusts its properties.
        
        plot3(R(1,1:index),R(2,1:index),R(3,1:index), ...
            'Color','w', ...
            'LineStyle','None', ...
            'Marker','.', ...
            'Parent',Axes);
        %[]Adds a plot to the specified axes and adjusts its properties.
        
        plot3(R(1,index),R(2,index),R(3,index), ...
            'Color','y', ...
            'LineStyle','None', ...
            'Marker','.', ...
            'MarkerSize',35, ...
            'Parent',Axes);
        %[]Adds a plot to the specified axes and adjusts its properties.
        
        text( ...
            'Color','r', ...
            'FontName','Arial', ...
            'FontSize',12, ...
            'FontWeight','Bold', ...
            'HorizontalAlignment','Center', ...
            'LineStyle','None', ...
            'Parent',Axes, ...
            'Position',[Extent+1,0,0], ...
            'String','X');
        %[]Adds a text box to the specified axes and adjusts its properties.
        
        text( ...
            'Color','g', ...
            'FontName','Arial', ...
            'FontSize',12, ...
            'FontWeight','Bold', ...
            'HorizontalAlignment','Center', ...
            'LineStyle','None', ...
            'Parent',Axes, ...
            'Position',[0,Extent+1,0], ...
            'String','Y');
        %[]Adds a text box to the specified axes and adjusts its properties.
        
        text( ...
            'Color','b', ...
            'FontName','Arial', ...
            'FontSize',12, ...
            'FontWeight','Bold', ...
            'HorizontalAlignment','Center', ...
            'LineStyle','None', ...
            'Parent',Axes, ...
            'Position',[0,0,Extent+1], ...
            'String','Z');
        %[]Adds a text box to the specified axes and adjusts its properties.
        
        counter = counter + dt;
        %[]Counter update.
        
        pause(0.1);
        %[]Pauses the animation for the specified amount of time.
        
    end
    
    title('Simulation Complete!','Color','w','FontSize',12,'FontWeight','Bold','Parent',Axes);
    %[]Adds a title to the specified axes and adjusts its properties.
    
end
%===================================================================================================